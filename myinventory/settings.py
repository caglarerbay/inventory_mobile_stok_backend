"""
Django settings for myinventory project.

Generated by 'django-admin startproject' using Django 5.1.7.
"""

import os
from pathlib import Path

# Projenin ana dizini
BASE_DIR = Path(__file__).resolve().parent.parent

# Güvenlik için kullanılacak gizli anahtar (production'da değiştirmeyi unutma!)
SECRET_KEY = 'replace-this-with-a-very-secret-key'

# Geliştirme aşamasında DEBUG True, production'da False yapmalısın.
DEBUG = True

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        # Opsiyonel: 'rest_framework.authentication.SessionAuthentication',
    ],
}



# ALLOWED_HOSTS ayarı; EB ortamınızın domainini de ekleyin.
ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    'DESKTOP-6L81PLG',
    '10.0.2.2',
    '13.50.43.178',
    'nukstoktakip25.appspot.com',
    'nukstoktakip25.oa.r.appspot.com',
]

# Uygulama tanımlamaları
INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'inventory',
    'import_export',  # Import/Export için
    'rest_framework.authtoken',
    

    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # WhiteNoise, statik dosyaların üretim ortamında sunulmasını sağlar.
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myinventory.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # Proje içerisinde özel template klasörleriniz varsa ekleyin.
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myinventory.wsgi.application'

# Veritabanı ayarları (SQLite kullanıyoruz)
DATABASES = {
      'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASS'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': '5432',
    }
}

# Şifre doğrulama ayarları
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Dil ve zaman ayarları
LANGUAGE_CODE = 'tr-tr'
TIME_ZONE = 'Europe/Istanbul'
USE_I18N = True
USE_TZ = True

# Statik dosyalar ayarı
STATIC_URL = '/static/'

# App Engine Standard ortamında yazılabilir dizin olan /tmp içine topla,
# başka ortamlarda proje kökünde 'staticfiles' klasörünü kullan.
if os.getenv('GAE_ENV', '').startswith('standard'):
    STATIC_ROOT = '/tmp/staticfiles'
else:
    STATIC_ROOT = BASE_DIR / 'staticfiles'

# WhiteNoise ile sıkıştırma ve cache
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Varsayılan otomatik alan tipi
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Giriş ve çıkış sonrası yönlendirme ayarları:
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'nuk.stoktakip@gmail.com'
EMAIL_HOST_PASSWORD = 'oxfyfitygatvxaga'
DEFAULT_FROM_EMAIL = 'nuk.stoktakip@gmail.com'

# Image upload için gerekli
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Firebase için (örnek)
FCM_API_KEY = 'your_firebase_api_key'

CORS_ALLOW_ALL_ORIGINS = True

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
FIREBASE_KEY_PATH = os.path.join(BASE_DIR, 'firebase_key.json')

#hata kodlarını ekranada görmek için loggign kullanımı
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {'class': 'logging.StreamHandler'},
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}
